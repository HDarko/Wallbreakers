//I had done a question like this before and remembered that using mod 10
//was a useful method so I merely implemented that, in C++ this time.
Last time it was a Python question

When I did this:
Runtime: 0 ms, faster than 100.00% of C++ online submissions for Self Dividing Numbers.
Memory Usage: 8.3 MB, less than 86.57% of C++ online submissions for Self Dividing Numbers.

class Solution {
public:
    vector<int> selfDividingNumbers(int left, int right) {
        vector<int> result;
        
        for(int i=left;i<right+1;i++)
        {
            if(CanSelfDivide(i))
            {
                result.push_back(i);
            }
                
        }
        return result;
    }
    
    bool CanSelfDivide(int i)
    {
        int temp=i;
        while(temp>0)
        {
            int digit{temp % 10};
            if(digit==0 || i % digit!=0)
            {
                return false;
            }
            temp/=10;
        }
        return true;
    }
};
